name: PASS Checker (continuous)

on:
  schedule:
    - cron: "1 */6 * * *"     # elke 6 uur om :08 (UTC)
  workflow_dispatch: {}        # handmatig starten

permissions:
  contents: write              # nodig om state.json te committen (optioneel)

concurrency:
  group: pass-checker
  cancel-in-progress: true     # geen overlap: nieuwe run annuleert oude

jobs:
  run:
    runs-on: ubuntu-latest
    timeout-minutes: 360       # ~6 uur max per run

    env:
      CHECK_INTERVAL_SEC: 2    # check-interval (seconden)

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: true

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Install dependencies and browsers
        run: |
          python -m pip install --upgrade pip
          pip install playwright python-dotenv requests
          python -m playwright install --with-deps chromium

      - name: Run checker continuously (up to ~5h50m)
        env:
          # Login / navigatie
          PASS_USER:  ${{ secrets.PASS_USER }}
          PASS_PASS:  ${{ secrets.PASS_PASS }}
          BASE_URL:   ${{ secrets.BASE_URL }}
          CALENDAR_URL: ""
          CALENDAR_SELECTOR: ${{ secrets.CALENDAR_SELECTOR }}

          # Telegram
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID:   ${{ secrets.TELEGRAM_CHAT_ID }}
          NOTIFY_PREFIX: "[Beau] "
          FRIEND_TELEGRAM_BOT_TOKEN: ${{ secrets.FRIEND_TELEGRAM_BOT_TOKEN }}
          FRIEND_TELEGRAM_CHAT_ID:   ${{ secrets.FRIEND_TELEGRAM_CHAT_ID }}
          FRIEND_NOTIFY_PREFIX: "[Philip] "

          # Flags
          AUTO_BOOK:  ${{ secrets.AUTO_BOOK }}
          HEADLESS:   ${{ secrets.HEADLESS }}
          TEST_PING_WHEN_NO_DAYS: ${{ secrets.TEST_PING_WHEN_NO_DAYS }}
          BOOKING_TEST_MODE: ${{ secrets.BOOKING_TEST_MODE }}
        run: |
          set -e
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          START=$(date +%s)
          END=$(( START + 21000 ))  # ~5h50m

          iter=0
          while [ "$(date +%s)" -lt "$END" ]; do
            iter=$((iter+1))
            echo "===== CHECK $iter ===== $(date -Iseconds)"

            # run checker (laat fouten de loop niet stoppen)
            python check_pass.py || echo "[WARN] check_pass.py returned non-zero"

            # --- GIT FIX: schoon trekken vóór pull, daarna alleen 'meaningful' commit ---
            git reset --hard || true
            git clean -fd || true
            git pull --rebase || true

            if [ -f "state.json" ]; then
              # tel aantal betekenisvolle diffs (negeer last_seen & calendar_hash)
              CHANGED_MEANINGFUL=$(git diff -U0 HEAD -- state.json \
                | grep -E '^\+|^\-' \
                | grep -Ev '"last_seen"|\"calendar_hash\"' \
                | wc -l | tr -d ' ')
              if [ "$CHANGED_MEANINGFUL" -gt 0 ]; then
                git add state.json || true
                git commit -m "chore: update state.json (meaningful change) [skip ci] (iter $iter)" || true
                git push || true
                echo "[GIT] state.json committed (meaningful change)."
              else
                echo "[GIT] only last_seen/calendar_hash changed → skip commit."
              fi
            fi
            # --- EINDE GIT FIX ---

            # interval
            if [ "$CHECK_INTERVAL_SEC" -gt 0 ]; then
              sleep "$CHECK_INTERVAL_SEC"
            fi
          done

      # Upload artifacts alleen bij failures (scheelt opslag)
      - name: Upload artifacts (html/png/state) on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: pass-checker-artifacts
          path: |
            *.png
            *.html
            state.json
          retention-days: 3
          if-no-files-found: ignore

